# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

################### COMMAND ###################

    App\SfCommand\CreateReadModelCommand:
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@app.read_model.repository.order"
        tags:
            - { name: console.command }

    App\SfCommand\DropReadModelCommand:
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@app.read_model.repository.order"
        tags:
            - { name: console.command }

    App\SfCommand\CreateEventStoreCommand:
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@broadway.event_store"
        tags:
            - { name: console.command }

    App\SfCommand\DropEventStoreCommand:
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@broadway.event_store"
        tags:
            - { name: console.command }

#################### CONTROLLER ###################

    app.controller.order:
        class: App\Controller\OrderController
        arguments:
            - '@broadway.command_handling.simple_command_bus'
            - '@broadway.uuid.generator'

################### REPOSITORY ###################

    app.write.repository.order:
        class: App\Repository\OrderWriteRepository
        arguments:
            - "@broadway.event_store.dbal"
            - "@broadway.event_handling.event_bus"
            - []

    app.read_model.repository.order:
        class: App\Repository\OrderReadRepository
#        arguments:
#            - "@app.read_model.repository_factory"

    App\ReadModel\DBALRepositoryFactory:
        arguments:
            - '@doctrine.dbal.default_connection'
            - '@broadway.serializer.readmodel'
            - "read_model"


#################### Command Handler ###################

    App\Handler\CreateOrderHandler:
        arguments:
            - "@app.write.repository.order"
        tags:
            - { name: broadway.command_handler }

    App\Handler\UpdateOrderStatusHandler:
        arguments:
            - "@app.write.repository.order"
        tags:
            - { name: broadway.command_handler }


#################### MISC ###################

    Broadway\CommandHandling\CommandBus:
        alias: 'broadway.command_handling.simple_command_bus'

    Broadway\UuidGenerator\UuidGeneratorInterface:
        alias: 'broadway.uuid.generator'

    Broadway\Serializer\Serializer:
        alias: 'broadway.simple_interface_serializer'
